diff --git a/CMake/FindPEGTL.cmake b/CMake/FindPEGTL.cmake
index fbc3e15a72..1d70803f6a 100644
--- a/CMake/FindPEGTL.cmake
+++ b/CMake/FindPEGTL.cmake
@@ -20,6 +20,19 @@
 #
 #  PEGTL::PEGTL
 
+message(STATUS "Searching for PEGTL")
+find_package(PEGTL CONFIG REQUIRED)
+if(TARGET taocpp::pegtl)
+    message(STATUS "Searching for PEGTL - found target taocpp::pegtl")
+    get_target_property(TARGET_IMPORTED_GLOBAL taocpp::pegtl IMPORTED_GLOBAL)
+    if(NOT TARGET_IMPORTED_GLOBAL)
+      set_target_properties(taocpp::pegtl PROPERTIES IMPORTED_GLOBAL TRUE)
+    endif()
+    if(NOT TARGET PEGTL::PEGTL)
+       add_library(PEGTL::PEGTL IMPORTED INTERFACE)
+       target_link_libraries(PEGTL::PEGTL INTERFACE taocpp::pegtl)
+    endif()
+else()
 find_path(PEGTL_INCLUDE_DIR
   NAMES pegtl/version.hpp
   PATH_SUFFIXES tao
@@ -48,3 +61,4 @@ if (PEGTL_FOUND)
       INTERFACE_INCLUDE_DIRECTORIES "${PEGTL_INCLUDE_DIR}")
   endif ()
 endif ()
+endif ()
\ No newline at end of file
diff --git a/Common/DataModel/vtkCellAttribute.cxx b/Common/DataModel/vtkCellAttribute.cxx
index 3c022efc6e..634feaa1d3 100644
--- a/Common/DataModel/vtkCellAttribute.cxx
+++ b/Common/DataModel/vtkCellAttribute.cxx
@@ -595,10 +595,7 @@ bool vtkCellAttribute::DecodeSpace(
   {
     if (!quiet)
     {
-      const auto p = err.positions.front();
-      vtkGenericWarningMacro("Attribute Space: " << err.what() << "\n"
-                                                 << in.line_at(p) << "\n"
-                                                 << std::string(p.byte_in_line, ' ') << "^\n");
+      vtkGenericWarningMacro("Attribute Space: " << err.what() << "\n");
     }
     return false;
   }
diff --git a/IO/MotionFX/vtkMotionFXCFGGrammar.h b/IO/MotionFX/vtkMotionFXCFGGrammar.h
index e58eeb8012..67bc5d8892 100644
--- a/IO/MotionFX/vtkMotionFXCFGGrammar.h
+++ b/IO/MotionFX/vtkMotionFXCFGGrammar.h
@@ -11,7 +11,7 @@
 
 // for debugging
 // clang-format off
-#include VTK_PEGTL(pegtl/contrib/tracer.hpp)
+#include VTK_PEGTL(pegtl/contrib/trace.hpp)
 // clang-format on
 
 namespace MotionFX
diff --git a/IO/MotionFX/vtkMotionFXCFGReader.cxx b/IO/MotionFX/vtkMotionFXCFGReader.cxx
index d5e0b54624..7527db995e 100644
--- a/IO/MotionFX/vtkMotionFXCFGReader.cxx
+++ b/IO/MotionFX/vtkMotionFXCFGReader.cxx
@@ -1212,7 +1212,7 @@ bool PositionFileMotion::read_position_file(const std::string& rootDir) const
     }
     return true;
   }
-  catch (const tao::pegtl::input_error& e)
+  catch (const tao::pegtl::parse_error& e)
   {
     vtkGenericWarningMacro("PositionFileMotion::read_position_file failed: " << e.what());
   }
@@ -1231,7 +1231,7 @@ bool UniversalTransformMotion::read_universaltransform_file(const std::string& r
       in, numbers, this->transforms);
     return true;
   }
-  catch (const tao::pegtl::input_error& e)
+  catch (const tao::pegtl::parse_error& e)
   {
     vtkGenericWarningMacro(
       "UniversalTransformMotion::read_universaltransform_file failed: " << e.what());
@@ -1268,7 +1268,7 @@ public:
       if (getenv("MOTIONFX_DEBUG_GRAMMAR") != nullptr)
       {
         tao::pegtl::read_input<> in2(filename);
-        tao::pegtl::parse<MotionFX::CFG::Grammar, tao::pegtl::nothing, tao::pegtl::tracer>(in2);
+        tao::pegtl::complete_trace<MotionFX::CFG::Grammar>(in2);
       }
       return false;
     }
diff --git a/ThirdParty/pegtl/CMakeLists.txt b/ThirdParty/pegtl/CMakeLists.txt
index 27c894274b..d2fd1267d6 100644
--- a/ThirdParty/pegtl/CMakeLists.txt
+++ b/ThirdParty/pegtl/CMakeLists.txt
@@ -13,7 +13,6 @@ vtk_module_third_party(
       "2.8.3"
   EXTERNAL
     PACKAGE PEGTL
-    VERSION 2.0.0
     TARGETS PEGTL::PEGTL
     STANDARD_INCLUDE_DIRS)
 
