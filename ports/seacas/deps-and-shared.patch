diff --git a/cmake/TPLs/FindTPLHDF5.cmake b/cmake/TPLs/FindTPLHDF5.cmake
index 3799818f29..19dadcf268 100644
--- a/cmake/TPLs/FindTPLHDF5.cmake
+++ b/cmake/TPLs/FindTPLHDF5.cmake
@@ -55,7 +55,7 @@
 
 find_package(HDF5 REQUIRED COMPONENTS C HL)
 
-TRIBITS_TPL_FIND_INCLUDE_DIRS_AND_LIBRARIES(HDF5
-  REQUIRED_HEADERS hdf5.h
-  REQUIRED_LIBS_NAMES hdf5_hl hdf5 z
-  )
+tribits_extpkg_create_imported_all_libs_target_and_config_file(
+  HDF5
+  INNER_FIND_PACKAGE_NAME HDF5
+  IMPORTED_TARGETS_FOR_ALL_LIBS HDF5::HDF5 )
diff --git a/cmake/TPLs/FindTPLMETIS.cmake b/cmake/TPLs/FindTPLMETIS.cmake
index 90911a3ccc..fb92b8c729 100644
--- a/cmake/TPLs/FindTPLMETIS.cmake
+++ b/cmake/TPLs/FindTPLMETIS.cmake
@@ -54,7 +54,8 @@
 # @HEADER
 
 
-TRIBITS_TPL_FIND_INCLUDE_DIRS_AND_LIBRARIES( METIS
-  REQUIRED_HEADERS metis.h
-  REQUIRED_LIBS_NAMES "metis"
-  )
+find_package(metis REQUIRED)
+tribits_extpkg_create_imported_all_libs_target_and_config_file(
+  METIS
+  INNER_FIND_PACKAGE_NAME metis
+  IMPORTED_TARGETS_FOR_ALL_LIBS metis )
diff --git a/cmake/TPLs/FindTPLMatio.cmake b/cmake/TPLs/FindTPLMatio.cmake
index c76713ab9a..f5b8bd7027 100644
--- a/cmake/TPLs/FindTPLMatio.cmake
+++ b/cmake/TPLs/FindTPLMatio.cmake
@@ -56,7 +56,7 @@ if (${CMAKE_VERSION} GREATER "3.13")
      cmake_policy(SET CMP0074 NEW)
 endif()
 
-find_package(Matio REQUIRED)
+list(APPEND CMAKE_FIND_LIBRARY_PREFIXES lib)
 TRIBITS_TPL_FIND_INCLUDE_DIRS_AND_LIBRARIES( Matio
   REQUIRED_HEADERS matio.h
   REQUIRED_LIBS_NAMES "matio")
diff --git a/cmake/TPLs/FindTPLNetcdf.cmake b/cmake/TPLs/FindTPLNetcdf.cmake
index 2c65d60bc3..1a8bacf75f 100644
--- a/cmake/TPLs/FindTPLNetcdf.cmake
+++ b/cmake/TPLs/FindTPLNetcdf.cmake
@@ -55,7 +55,7 @@
 
 
 find_package(NetCDF REQUIRED)
-TRIBITS_TPL_FIND_INCLUDE_DIRS_AND_LIBRARIES( Netcdf
-  REQUIRED_HEADERS netcdf.h
-  REQUIRED_LIBS_NAMES netcdf
-  )
+tribits_extpkg_create_imported_all_libs_target_and_config_file(
+  NetCDF
+  INNER_FIND_PACKAGE_NAME NetCDF
+  IMPORTED_TARGETS_FOR_ALL_LIBS NetCDF::NetCDF )
diff --git a/cmake/TPLs/FindTPLZlib.cmake b/cmake/TPLs/FindTPLZlib.cmake
index cc607e9d8a..e8e0546063 100644
--- a/cmake/TPLs/FindTPLZlib.cmake
+++ b/cmake/TPLs/FindTPLZlib.cmake
@@ -54,7 +54,8 @@
 # @HEADER
 
 
-TRIBITS_TPL_FIND_INCLUDE_DIRS_AND_LIBRARIES( Zlib
-  REQUIRED_HEADERS zlib.h
-  REQUIRED_LIBS_NAMES  z
-  )
+find_package(ZLIB REQUIRED)
+tribits_extpkg_create_imported_all_libs_target_and_config_file(
+  Zlib
+  INNER_FIND_PACKAGE_NAME ZLIB
+  IMPORTED_TARGETS_FOR_ALL_LIBS ZLIB::ZLIB )
diff --git a/cmake/tribits/common_tpls/FindTPLCGNS.cmake b/cmake/tribits/common_tpls/FindTPLCGNS.cmake
index 649ab49855..6a2d5e780f 100644
--- a/cmake/tribits/common_tpls/FindTPLCGNS.cmake
+++ b/cmake/tribits/common_tpls/FindTPLCGNS.cmake
@@ -45,18 +45,14 @@ if ((CGNS_ALLOW_MODERN AND HDF5_FOUND_MODERN_CONFIG_FILE) OR CGNS_FORCE_MODERN)
   print_var(CGNS_ALLOW_MODERN)
   print_var(CGNS_FORCE_MODERN)
   message("-- Using find_package(CGNS ${minimum_modern_CGNS_version} CONFIG) ...")
-  find_package(CGNS ${minimum_modern_CGNS_version} CONFIG NAMES cgns)
+  find_package(cgns CONFIG)
   if (CGNS_FOUND)
     message("-- Found CGNS_CONFIG=${CGNS_CONFIG}")
     message("-- Generating CGNS::all_libs and CGNSConfig.cmake")
-    set(CGNS_TARGET CGNS::cgns_shared)
-    if(NOT TARGET CGNS::cgns_shared)
-      set(CGNS_TARGET CGNS::cgns_static)
-    endif()
     tribits_extpkg_create_imported_all_libs_target_and_config_file(
       CGNS
-      INNER_FIND_PACKAGE_NAME  CGNS
-      IMPORTED_TARGETS_FOR_ALL_LIBS  ${CGNS_TARGET})
+      INNER_FIND_PACKAGE_NAME  cgns
+      IMPORTED_TARGETS_FOR_ALL_LIBS  CGNS::CGNS)
     set(TPL_CGNS_NOT_FOUND FALSE)
   endif()
 
diff --git a/cmake/tribits/common_tpls/FindTPLHDF5.cmake b/cmake/tribits/common_tpls/FindTPLHDF5.cmake
index 71e0dd640e..398e10d099 100644
--- a/cmake/tribits/common_tpls/FindTPLHDF5.cmake
+++ b/cmake/tribits/common_tpls/FindTPLHDF5.cmake
@@ -8,7 +8,7 @@ if (Netcdf_ALLOW_MODERN)
 
   print_var(Netcdf_ALLOW_MODERN)
   message("-- Using find_package(HDF5 CONFIG) ...")
-  find_package(HDF5 CONFIG)
+  find_package(HDF5)
   if (HDF5_FOUND)
     message("-- Found HDF5_CONFIG=${HDF5_CONFIG}")
     message("-- Generating HDF5::all_libs and HDF5Config.cmake")
@@ -16,7 +16,7 @@ if (Netcdf_ALLOW_MODERN)
     tribits_extpkg_create_imported_all_libs_target_and_config_file(
       HDF5
       INNER_FIND_PACKAGE_NAME  HDF5
-      IMPORTED_TARGETS_FOR_ALL_LIBS   ${HDF5_EXPORT_LIBRARIES})
+      IMPORTED_TARGETS_FOR_ALL_LIBS   hdf5::hdf5)
     set(HDF5_INTERNAL_IS_MODERN TRUE)
     set(TPL_HDF5_NOT_FOUND FALSE)
   else()
@@ -27,7 +27,7 @@ endif()
 
 set(HDF5_FOUND_MODERN_CONFIG_FILE ${HDF5_INTERNAL_IS_MODERN} CACHE INTERNAL "True if HDF5 was found by the modern method")
 
-if (NOT TARGET HDF5::all_libs)
+if (0)
 
   # First, set up the variables for the (backward-compatible) TriBITS way of
   # finding HDF5.  These are used in case find_package(HDF5 ...) is not called
diff --git a/cmake/tribits/common_tpls/find_modules/FindCGNS.cmake b/cmake/tribits/common_tpls/find_modules/FindCGNS.cmake
index c2c98f4bee..9626cdb929 100644
--- a/cmake/tribits/common_tpls/find_modules/FindCGNS.cmake
+++ b/cmake/tribits/common_tpls/find_modules/FindCGNS.cmake
@@ -180,7 +180,7 @@ else(CGNS_LIBRARIES AND CGNS_INCLUDE_DIRS)
         if (EXISTS "${CGNS_LIBRARY_DIR}")
 
             find_library(CGNS_LIBRARY
-                         NAMES cgns
+                         NAMES cgnsdll cgns
                          HINTS ${CGNS_LIBRARY_DIR}
                          NO_DEFAULT_PATH)
 
@@ -196,7 +196,7 @@ else(CGNS_LIBRARIES AND CGNS_INCLUDE_DIRS)
             if (EXISTS "${CGNS_ROOT}" )
 
                 find_library(CGNS_LIBRARY
-                             NAMES cgns
+                             NAMES cgnsdll cgns
                              HINTS ${CGNS_ROOT}
                              PATH_SUFFIXES "lib" "Lib"
                              NO_DEFAULT_PATH)
@@ -210,7 +210,7 @@ else(CGNS_LIBRARIES AND CGNS_INCLUDE_DIRS)
         else()
 
             find_library(CGNS_LIBRARY
-                         NAMES cgns
+                         NAMES cgnsdll cgns
                          PATH_SUFFIXES ${cgns_lib_suffixes})
 
         endif()
diff --git a/packages/seacas/libraries/aprepro_lib/CMakeLists.txt b/packages/seacas/libraries/aprepro_lib/CMakeLists.txt
index 13fcf791dd..44e30acdc2 100644
--- a/packages/seacas/libraries/aprepro_lib/CMakeLists.txt
+++ b/packages/seacas/libraries/aprepro_lib/CMakeLists.txt
@@ -106,6 +106,10 @@ if (${CMAKE_PROJECT_NAME} STREQUAL "Seacas")
    endif()
 endif()
 
+if(BUILD_SHARED_LIBS)
+    set_target_properties(aprepro_lib PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS ON)
+endif()
+
 if (${PACKAGE_NAME}_ENABLE_TESTS)
   TRIBITS_ADD_EXECUTABLE(aprepro_lib_test NOEXEPREFIX NOEXESUFFIX INSTALLABLE SOURCES apr_test.cc LINKER_LANGUAGE CXX)
   TRIBITS_ADD_EXECUTABLE(aprepro_strings_test NOEXEPREFIX NOEXESUFFIX INSTALLABLE SOURCES strings.cc LINKER_LANGUAGE CXX)
diff --git a/packages/seacas/libraries/chaco/CMakeLists.txt b/packages/seacas/libraries/chaco/CMakeLists.txt
index 576abc8a84..c74d3a9bb7 100644
--- a/packages/seacas/libraries/chaco/CMakeLists.txt
+++ b/packages/seacas/libraries/chaco/CMakeLists.txt
@@ -57,4 +57,7 @@ TRIBITS_ADD_LIBRARY(
   SOURCES ${SOURCES}
   )
 
+if(BUILD_SHARED_LIBS)
+    set_target_properties(chaco PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS ON)
+endif()
 TRIBITS_SUBPACKAGE_POSTPROCESS()
diff --git a/packages/seacas/libraries/exodus/CMakeLists.txt b/packages/seacas/libraries/exodus/CMakeLists.txt
index d2be5f9fa8..999635814d 100644
--- a/packages/seacas/libraries/exodus/CMakeLists.txt
+++ b/packages/seacas/libraries/exodus/CMakeLists.txt
@@ -13,6 +13,7 @@ FILE(GLOB SOURCES src/ex_*.c)
 if (NOT ${PACKAGE_NAME}_HIDE_DEPRECATED_CODE)
   FILE(GLOB DEP_SOURCES src/deprecated/ex_*.c)
 endif()
+set(EXODUSII_BUILD_SHARED_LIBS "${BUILD_SHARED_LIBS}")
 TRIBITS_CONFIGURE_FILE(exodus_config.h)
 
 if (NOT ${EXODUS_THREADSAFE})
@@ -33,6 +34,9 @@ TRIBITS_ADD_LIBRARY(
   HEADERS ${HEADERS}
   SOURCES ${SOURCES} ${DEP_SOURCES}
 )
+if(BUILD_SHARED_LIBS)
+  target_compile_definitions(exodus PRIVATE exoIIc_EXPORTS)
+endif()
 
 set_property(TARGET exodus PROPERTY C_STANDARD 99)
 set_property(TARGET exodus PROPERTY C_EXTENSIONS ON)
diff --git a/packages/seacas/libraries/exodus/cmake/exodus_config.h.in b/packages/seacas/libraries/exodus/cmake/exodus_config.h.in
index c8e303978d..99baf34316 100644
--- a/packages/seacas/libraries/exodus/cmake/exodus_config.h.in
+++ b/packages/seacas/libraries/exodus/cmake/exodus_config.h.in
@@ -3,3 +3,15 @@
 
 @SEACAS_DEPRECATED_DECLARATIONS@
 
+#cmakedefine EXODUSII_BUILD_SHARED_LIBS
+#if defined(_WIN32)
+# if defined(EXODUSII_BUILD_SHARED_LIBS)
+#  if defined(exoIIc_EXPORTS)
+#    define EXODUS_EXPORT __declspec( dllexport ) extern
+#  else
+#    define EXODUS_EXPORT __declspec( dllimport ) extern
+#  endif
+# endif
+#else
+#  define EXODUS_EXPORT extern
+#endif
diff --git a/packages/seacas/libraries/exodus/include/exodusII.h b/packages/seacas/libraries/exodus/include/exodusII.h
index dd545b5ec7..7732a87e22 100644
--- a/packages/seacas/libraries/exodus/include/exodusII.h
+++ b/packages/seacas/libraries/exodus/include/exodusII.h
@@ -823,7 +823,7 @@ ex_put_loadbal_param_cc(int             exoid,          /* NetCDF/Exodus file ID
 );
 
 /* Utility function to replace strncpy, strcpy -- guarantee null termination */
-char *ex_copy_string(char *dest, char const *source, size_t elements);
+EXODUS_EXPORT char *ex_copy_string(char *dest, char const *source, size_t elements);
 
 /*!
  * \addtogroup ModelDescription
diff --git a/packages/seacas/libraries/ioss/src/text_mesh/Iotm_TextMesh.C b/packages/seacas/libraries/ioss/src/text_mesh/Iotm_TextMesh.C
index 51d6490033..6187dfa0ab 100644
--- a/packages/seacas/libraries/ioss/src/text_mesh/Iotm_TextMesh.C
+++ b/packages/seacas/libraries/ioss/src/text_mesh/Iotm_TextMesh.C
@@ -124,12 +124,6 @@ namespace Iotm {
     initialize();
   }
 
-  TextMesh::TextMesh()
-  {
-    m_errorHandler = [](const std::ostringstream &errmsg) { error_handler(errmsg); };
-    initialize();
-  }
-
   unsigned TextMesh::spatial_dimension() const { return m_data.spatialDim; }
 
   void TextMesh::initialize()
diff --git a/packages/seacas/libraries/ioss/src/text_mesh/Iotm_TextMesh.h b/packages/seacas/libraries/ioss/src/text_mesh/Iotm_TextMesh.h
index 7de47932e6..2d0570dda0 100644
--- a/packages/seacas/libraries/ioss/src/text_mesh/Iotm_TextMesh.h
+++ b/packages/seacas/libraries/ioss/src/text_mesh/Iotm_TextMesh.h
@@ -66,7 +66,6 @@ namespace Iotm {
     explicit TextMesh(const std::string &parameters, IOSS_MAYBE_UNUSED int proc_count = 1,
                       int my_proc = 0);
     explicit TextMesh(int proc_count = 1, int my_proc = 0);
-    TextMesh();
     TextMesh(const TextMesh &)            = delete;
     TextMesh &operator=(const TextMesh &) = delete;
 
diff --git a/packages/seacas/libraries/nemesis/CMakeLists.txt b/packages/seacas/libraries/nemesis/CMakeLists.txt
index b03a9e9a96..19a9155d73 100644
--- a/packages/seacas/libraries/nemesis/CMakeLists.txt
+++ b/packages/seacas/libraries/nemesis/CMakeLists.txt
@@ -1,5 +1,6 @@
 TRIBITS_SUBPACKAGE(Nemesis)
 
+set(NEMESIS_BUILD_SHARED_LIBS "${BUILD_SHARED_LIBS}" CACHE BOOL "")
 SET(NEMESIS_VERSION_MAJOR "5")
 SET(NEMESIS_VERSION_MINOR "15")
 SET(NEMESIS_VERSION_PATCH "0")
@@ -29,6 +30,7 @@ TRIBITS_ADD_LIBRARY(
   )
 
 IF (${PACKAGE_NAME}_ENABLE_TESTS)
+target_compile_definitions(nemesis PRIVATE nemc_EXPORTS)
 TRIBITS_ADD_EXECUTABLE_AND_TEST(
   ne_ctest_wrap
   NAME ne_ctest_wrap
diff --git a/packages/seacas/libraries/nemesis/ne_nemesisI.h b/packages/seacas/libraries/nemesis/ne_nemesisI.h
index f07b316f99..770235c83b 100644
--- a/packages/seacas/libraries/nemesis/ne_nemesisI.h
+++ b/packages/seacas/libraries/nemesis/ne_nemesisI.h
@@ -12,6 +12,8 @@
  ****************************************************************************/
 #pragma once
 
+#include "nemesis_cfg.h"
+
 #ifdef __cplusplus
 extern "C" {
 #endif
@@ -33,24 +35,24 @@ typedef void void_int;
 /*=============================================================================
  *     Initial Information Routines
  *===========================================================================*/
-extern int ne_get_init_info(int   neid,          /* NemesisI file ID */
+NEMESIS_EXPORT int ne_get_init_info(int   neid,          /* NemesisI file ID */
                             int  *num_proc,      /* Number of processors */
                             int  *num_proc_in_f, /* Number of procs in this file */
                             char *ftype);
 
-extern int ne_put_init_info(int   neid,          /* NemesisI file ID */
+NEMESIS_EXPORT int ne_put_init_info(int   neid,          /* NemesisI file ID */
                             int   num_proc,      /* Number of processors */
                             int   num_proc_in_f, /* Number of procs in this file */
                             char *ftype);
 
-extern int ne_get_init_global(int       neid,            /* NemesisI file ID */
+NEMESIS_EXPORT int ne_get_init_global(int       neid,            /* NemesisI file ID */
                               void_int *num_nodes_g,     /* Number of global FEM nodes */
                               void_int *num_elems_g,     /* Number of global FEM elements */
                               void_int *num_elem_blks_g, /* Number of global elem blocks */
                               void_int *num_node_sets_g, /* Number of global node sets */
                               void_int *num_side_sets_g  /* Number of global side sets */
 );
-extern int ne_put_init_global(int     neid,            /* NemesisI file ID */
+NEMESIS_EXPORT int ne_put_init_global(int     neid,            /* NemesisI file ID */
                               int64_t num_nodes_g,     /* Number of global FEM nodes */
                               int64_t num_elems_g,     /* Number of global FEM elements */
                               int64_t num_elem_blks_g, /* Number of global elem blocks */
@@ -58,12 +60,12 @@ extern int ne_put_init_global(int     neid,            /* NemesisI file ID */
                               int64_t num_side_sets_g  /* Number of global side sets */
 );
 
-extern int ne_put_version(int neid);
+NEMESIS_EXPORT int ne_put_version(int neid);
 
 /*=============================================================================
  *     Loadbalance Parameter Routines
  *===========================================================================*/
-extern int ne_get_loadbal_param(int       neid,           /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_loadbal_param(int       neid,           /* NetCDF/Exodus file ID */
                                 void_int *num_int_nodes,  /* Number of internal FEM nodes */
                                 void_int *num_bor_nodes,  /* Number of border FEM nodes */
                                 void_int *num_ext_nodes,  /* Number of external FEM nodes */
@@ -74,7 +76,7 @@ extern int ne_get_loadbal_param(int       neid,           /* NetCDF/Exodus file
                                 int       processor       /* Processor ID */
 );
 
-extern int ne_put_loadbal_param(int     neid,           /* NemesisI file ID  */
+NEMESIS_EXPORT int ne_put_loadbal_param(int     neid,           /* NemesisI file ID  */
                                 int64_t num_int_nodes,  /* Number of internal FEM nodes */
                                 int64_t num_bor_nodes,  /* Number of border FEM nodes */
                                 int64_t num_ext_nodes,  /* Number of external FEM nodes */
@@ -85,7 +87,7 @@ extern int ne_put_loadbal_param(int     neid,           /* NemesisI file ID  */
                                 int     processor       /* Processor ID */
 );
 
-extern int ne_put_loadbal_param_cc(int       neid,           /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_loadbal_param_cc(int       neid,           /* NetCDF/Exodus file ID */
                                    void_int *num_int_nodes,  /* Number of internal node IDs */
                                    void_int *num_bor_nodes,  /* Number of border node IDs */
                                    void_int *num_ext_nodes,  /* Number of external node IDs */
@@ -98,26 +100,26 @@ extern int ne_put_loadbal_param_cc(int       neid,           /* NetCDF/Exodus fi
 /*=============================================================================
  *     NS, SS & EB Global Parameter Routines
  *===========================================================================*/
-extern int ne_get_ns_param_global(int       neid,          /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_ns_param_global(int       neid,          /* NetCDF/Exodus file ID */
                                   void_int *ns_ids_glob,   /* Global IDs of node sets */
                                   void_int *ns_n_cnt_glob, /* Count of nodes in node sets */
                                   void_int *ns_df_cnt_glob /* Count of dist. factors in ns */
 );
 
-extern int
+NEMESIS_EXPORT int
 ne_put_ns_param_global(int       neid,          /* NemesisI file ID */
                        void_int *global_ids,    /* Vector of global node-set IDs */
                        void_int *global_n_cnts, /* Vector of node counts in node-sets */
                        void_int *global_df_cnts /* Vector of dist factor counts in node-sets */
 );
 
-extern int ne_get_ss_param_global(int       neid,          /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_ss_param_global(int       neid,          /* NetCDF/Exodus file ID */
                                   void_int *ss_ids_glob,   /* Global side-set IDs */
                                   void_int *ss_s_cnt_glob, /* Global side count */
                                   void_int *ss_df_cnt_glob /* Global dist. factor count */
 );
 
-extern int ne_put_ss_param_global(int       neid,           /* NemesisI file ID */
+NEMESIS_EXPORT int ne_put_ss_param_global(int       neid,           /* NemesisI file ID */
                                   void_int *global_ids,     /* Vector of global side-set IDs */
                                   void_int *global_el_cnts, /* Vector of element/side */
                                                             /* counts in each side set */
@@ -125,12 +127,12 @@ extern int ne_put_ss_param_global(int       neid,           /* NemesisI file ID
                                                             /* counts in each side set */
 );
 
-extern int ne_get_eb_info_global(int       neid,       /* NemesisI file ID                 */
+NEMESIS_EXPORT int ne_get_eb_info_global(int       neid,       /* NemesisI file ID                 */
                                  void_int *el_blk_ids, /* Vector of global element IDs     */
                                  void_int *el_blk_cnts /* Vector of global element counts  */
 );
 
-extern int ne_put_eb_info_global(int       neid,       /* NemesisI file ID */
+NEMESIS_EXPORT int ne_put_eb_info_global(int       neid,       /* NemesisI file ID */
                                  void_int *el_blk_ids, /* Vector of global element IDs     */
                                  void_int *el_blk_cnts /* Vector of global element counts  */
 );
@@ -138,7 +140,7 @@ extern int ne_put_eb_info_global(int       neid,       /* NemesisI file ID */
 /*=============================================================================
  *     NS, SS & EB Subset Routines
  *===========================================================================*/
-extern int ne_get_n_side_set(int          neid,               /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_side_set(int          neid,               /* NetCDF/Exodus file ID */
                              ex_entity_id side_set_id,        /* Side-set ID to read */
                              int64_t      start_side_num,     /* Starting element number */
                              int64_t      num_sides,          /* Number of sides to read */
@@ -146,7 +148,7 @@ extern int ne_get_n_side_set(int          neid,               /* NetCDF/Exodus f
                              void_int    *side_set_side_list  /* List of side IDs */
 );
 
-extern int ne_put_n_side_set(int             neid,               /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_n_side_set(int             neid,               /* NetCDF/Exodus file ID */
                              ex_entity_id    side_set_id,        /* Side-set ID to write */
                              int64_t         start_side_num,     /* Starting element number */
                              int64_t         num_sides,          /* Number of sides to write */
@@ -154,49 +156,49 @@ extern int ne_put_n_side_set(int             neid,               /* NetCDF/Exodu
                              const void_int *side_set_side_list  /* List of side IDs */
 );
 
-extern int ne_get_n_side_set_df(int          neid,          /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_side_set_df(int          neid,          /* NetCDF/Exodus file ID */
                                 ex_entity_id side_set_id,   /* Side-set ID */
                                 int64_t      start_num,     /* Starting df number */
                                 int64_t      num_df_to_get, /* Number of df's to read */
                                 void        *side_set_df    /* Distribution factors */
 );
 
-extern int ne_put_n_side_set_df(int          neid,          /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_n_side_set_df(int          neid,          /* NetCDF/Exodus file ID */
                                 ex_entity_id side_set_id,   /* Side-set ID */
                                 int64_t      start_num,     /* Starting df number */
                                 int64_t      num_df_to_get, /* Number of df's to write */
                                 void        *side_set_df    /* Distribution factors */
 );
 
-extern int ne_get_n_node_set(int          neid,              /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_node_set(int          neid,              /* NetCDF/Exodus file ID */
                              ex_entity_id node_set_id,       /* Node set ID */
                              int64_t      start_node_num,    /* Node index to start reading at */
                              int64_t      num_node,          /* Number of nodes to read */
                              void_int    *node_set_node_list /* List of nodes in node set */
 );
 
-extern int ne_put_n_node_set(int             neid,              /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_n_node_set(int             neid,              /* NetCDF/Exodus file ID */
                              ex_entity_id    node_set_id,       /* Node set ID */
                              int64_t         start_node_num,    /* Node index to start writing at */
                              int64_t         num_node,          /* Number of nodes to write */
                              const void_int *node_set_node_list /* List of nodes in node set */
 );
 
-extern int ne_get_n_node_set_df(int          neid,          /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_node_set_df(int          neid,          /* NetCDF/Exodus file ID */
                                 ex_entity_id node_set_id,   /* Node-set ID */
                                 int64_t      start_num,     /* Starting df number */
                                 int64_t      num_df_to_get, /* Number of df's to read */
                                 void        *node_set_df    /* Distribution factors */
 );
 
-extern int ne_put_n_node_set_df(int          neid,          /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_n_node_set_df(int          neid,          /* NetCDF/Exodus file ID */
                                 ex_entity_id node_set_id,   /* Node-set ID */
                                 int64_t      start_num,     /* Starting df number */
                                 int64_t      num_df_to_get, /* Number of df's to write */
                                 void        *node_set_df    /* Distribution factors */
 );
 
-extern int ne_get_n_coord(int     neid,           /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_coord(int     neid,           /* NetCDF/Exodus file ID */
                           int64_t start_node_num, /* Starting position to read from */
                           int64_t num_nodes,      /* Number of coords to read */
                           void   *x_coor,         /* Vector of X coordinates */
@@ -204,7 +206,7 @@ extern int ne_get_n_coord(int     neid,           /* NetCDF/Exodus file ID */
                           void   *z_coor          /* Vector of Z coordinates */
 );
 
-extern int ne_put_n_coord(int     neid,           /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_n_coord(int     neid,           /* NetCDF/Exodus file ID */
                           int64_t start_node_num, /* Starting position to write to */
                           int64_t num_nodes,      /* Number of coords to write */
                           void   *x_coor,         /* Vector of X coordinates */
@@ -212,35 +214,35 @@ extern int ne_put_n_coord(int     neid,           /* NetCDF/Exodus file ID */
                           void   *z_coor          /* Vector of Z coordinates */
 );
 
-extern int ne_get_n_elem_conn(int          neid,           /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_elem_conn(int          neid,           /* NetCDF/Exodus file ID */
                               ex_entity_id elem_blk_id,    /* Element block ID */
                               int64_t      start_elem_num, /* Starting position to read from */
                               int64_t      num_elems,      /* Number of elements to read */
                               void_int    *connect         /* Connectivity vector */
 );
 
-extern int ne_put_n_elem_conn(int             neid,           /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_n_elem_conn(int             neid,           /* NetCDF/Exodus file ID */
                               ex_entity_id    elem_blk_id,    /* Element block ID */
                               int64_t         start_elem_num, /* Starting position to write to */
                               int64_t         num_elems,      /* Number of elements to write */
                               const void_int *connect         /* Connectivity vector */
 );
 
-extern int ne_get_n_elem_attr(int          neid,           /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_elem_attr(int          neid,           /* NetCDF/Exodus file ID */
                               ex_entity_id elem_blk_id,    /* Element block ID */
                               int64_t      start_elem_num, /* Starting position to read from */
                               int64_t      num_elems,      /* Number of elements to read */
                               void        *attrib          /* Attribute */
 );
 
-extern int ne_put_n_elem_attr(int          neid,           /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_n_elem_attr(int          neid,           /* NetCDF/Exodus file ID */
                               ex_entity_id elem_blk_id,    /* Element block ID */
                               int64_t      start_elem_num, /* Starting position to write to */
                               int64_t      num_elems,      /* Number of elements to write */
                               void        *attrib          /* Attribute */
 );
 
-extern int ne_get_elem_type(int          neid,        /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_elem_type(int          neid,        /* NetCDF/Exodus file ID */
                             ex_entity_id elem_blk_id, /* Element block ID */
                             char        *elem_type    /* The name of the element type */
 );
@@ -248,7 +250,7 @@ extern int ne_get_elem_type(int          neid,        /* NetCDF/Exodus file ID *
 /*=============================================================================
  *     Variable Routines
  *===========================================================================*/
-extern int ne_get_n_elem_var(int          neid,              /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_elem_var(int          neid,              /* NetCDF/Exodus file ID */
                              int          time_step,         /* time index */
                              int          elem_var_index,    /* elemental variable index */
                              ex_entity_id elem_blk_id,       /* elemental block id */
@@ -258,7 +260,7 @@ extern int ne_get_n_elem_var(int          neid,              /* NetCDF/Exodus fi
                              void        *elem_var_vals      /* variable values */
 );
 
-extern int ne_put_elem_var_slab(int          neid,           /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_elem_var_slab(int          neid,           /* NetCDF/Exodus file ID */
                                 int          time_step,      /* time index */
                                 int          elem_var_index, /* elemental variable index */
                                 ex_entity_id elem_blk_id,    /* elemental block id */
@@ -267,7 +269,7 @@ extern int ne_put_elem_var_slab(int          neid,           /* NetCDF/Exodus fi
                                 void        *elem_var_vals   /* variable values */
 );
 
-extern int ne_get_n_nodal_var(int     neid,            /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_nodal_var(int     neid,            /* NetCDF/Exodus file ID */
                               int     time_step,       /* whole time step number */
                               int     nodal_var_index, /* index of desired nodal var */
                               int64_t start_node_num,  /* starting node number */
@@ -275,7 +277,7 @@ extern int ne_get_n_nodal_var(int     neid,            /* NetCDF/Exodus file ID
                               void   *nodal_vars       /* array of nodal var values */
 );
 
-extern int ne_put_nodal_var_slab(int     neid,            /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_nodal_var_slab(int     neid,            /* NetCDF/Exodus file ID */
                                  int     time_step,       /* The time step index */
                                  int     nodal_var_index, /* Nodal variable index */
                                  int64_t start_pos,       /* Start position for write */
@@ -286,51 +288,51 @@ extern int ne_put_nodal_var_slab(int     neid,            /* NetCDF/Exodus file
 /*=============================================================================
  *     Number Map Routines
  *===========================================================================*/
-extern int ne_get_n_elem_num_map(int       neid,      /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_elem_num_map(int       neid,      /* NetCDF/Exodus file ID */
                                  int64_t   start_ent, /* Starting position to read from */
                                  int64_t   num_ents,  /* Number of elements to read */
                                  void_int *elem_map   /* element map numbers */
 );
 
-extern int ne_put_n_elem_num_map(int             neid,      /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_n_elem_num_map(int             neid,      /* NetCDF/Exodus file ID */
                                  int64_t         start_ent, /* Starting position to read from */
                                  int64_t         num_ents,  /* Number of elements to read */
                                  const void_int *elem_map   /* element map numbers */
 );
 
-extern int ne_get_n_node_num_map(int       neid,      /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_n_node_num_map(int       neid,      /* NetCDF/Exodus file ID */
                                  int64_t   start_ent, /* starting node number */
                                  int64_t   num_ents,  /* number of nodes to read */
                                  void_int *node_map   /* vector for node map */
 );
 
-extern int ne_put_n_node_num_map(int             neid,      /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_n_node_num_map(int             neid,      /* NetCDF/Exodus file ID */
                                  int64_t         start_ent, /* starting node number */
                                  int64_t         num_ents,  /* number of nodes to read */
                                  const void_int *node_map   /* vector for node map */
 );
 
-extern int ne_get_node_map(int       neid,      /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_node_map(int       neid,      /* NetCDF/Exodus file ID */
                            void_int *node_mapi, /* Internal FEM node IDs */
                            void_int *node_mapb, /* Border FEM node IDs */
                            void_int *node_mape, /* External FEM node IDs */
                            int       processor  /* Processor IDs */
 );
 
-extern int ne_put_node_map(int       neid,      /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_node_map(int       neid,      /* NetCDF/Exodus file ID */
                            void_int *node_mapi, /* Internal FEM node IDs */
                            void_int *node_mapb, /* Border FEM node IDs */
                            void_int *node_mape, /* External FEM node IDs */
                            int       processor  /* This processor ID */
 );
 
-extern int ne_get_elem_map(int       neid,      /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_elem_map(int       neid,      /* NetCDF/Exodus file ID */
                            void_int *elem_mapi, /* Internal element IDs */
                            void_int *elem_mapb, /* Border element IDs */
                            int       processor  /* Processor ID */
 );
 
-extern int ne_put_elem_map(int       neid,      /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_elem_map(int       neid,      /* NetCDF/Exodus file ID */
                            void_int *elem_mapi, /* Internal FEM element IDs */
                            void_int *elem_mapb, /* Border FEM element IDs */
                            int       processor  /* This processor ID */
@@ -340,7 +342,7 @@ extern int ne_put_elem_map(int       neid,      /* NetCDF/Exodus file ID */
  *     Communications Maps Routines
  *===========================================================================*/
 
-extern int ne_get_cmap_params(int       neid,                /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_cmap_params(int       neid,                /* NetCDF/Exodus file ID */
                               void_int *node_cmap_ids,       /* Nodal comm. map IDs */
                               void_int *node_cmap_node_cnts, /* Number of nodes in each map */
                               void_int *elem_cmap_ids,       /* Elemental comm. map IDs */
@@ -348,7 +350,7 @@ extern int ne_get_cmap_params(int       neid,                /* NetCDF/Exodus fi
                               int       processor            /* This processor ID */
 );
 
-extern int ne_put_cmap_params(int       neid,               /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_cmap_params(int       neid,               /* NetCDF/Exodus file ID */
                               void_int *node_map_ids,       /* Node map IDs */
                               void_int *node_map_node_cnts, /* Nodes in nodal comm */
                               void_int *elem_map_ids,       /* Elem map IDs */
@@ -356,7 +358,7 @@ extern int ne_put_cmap_params(int       neid,               /* NetCDF/Exodus fil
                               int64_t   processor           /* This processor ID */
 );
 
-extern int ne_put_cmap_params_cc(int       neid,               /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_cmap_params_cc(int       neid,               /* NetCDF/Exodus file ID */
                                  void_int *node_map_ids,       /* Node map IDs */
                                  void_int *node_map_node_cnts, /* Nodes in nodal comm */
                                  void_int *node_proc_ptrs,     /* Pointer into array for */
@@ -367,21 +369,21 @@ extern int ne_put_cmap_params_cc(int       neid,               /* NetCDF/Exodus
                                                                /* elem maps               */
 );
 
-extern int ne_get_node_cmap(int          neid,     /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_node_cmap(int          neid,     /* NetCDF/Exodus file ID */
                             ex_entity_id map_id,   /* Map ID */
                             void_int    *node_ids, /* FEM node IDs */
                             void_int    *proc_ids, /* Processor IDs */
                             int          processor /* This processor ID */
 );
 
-extern int ne_put_node_cmap(int          neid,     /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_node_cmap(int          neid,     /* NetCDF/Exodus file ID */
                             ex_entity_id map_id,   /* Nodal comm map ID */
                             void_int    *node_ids, /* FEM node IDs */
                             void_int    *proc_ids, /* Processor IDs */
                             int          processor /* This processor ID */
 );
 
-extern int ne_get_elem_cmap(int          neid,     /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_get_elem_cmap(int          neid,     /* NetCDF/Exodus file ID */
                             ex_entity_id map_id,   /* Elemental comm map ID */
                             void_int    *elem_ids, /* Element IDs */
                             void_int    *side_ids, /* Element side IDs */
@@ -389,7 +391,7 @@ extern int ne_get_elem_cmap(int          neid,     /* NetCDF/Exodus file ID */
                             int          processor /* This processor ID */
 );
 
-extern int ne_put_elem_cmap(int          neid,     /* NetCDF/Exodus file ID */
+NEMESIS_EXPORT int ne_put_elem_cmap(int          neid,     /* NetCDF/Exodus file ID */
                             ex_entity_id map_id,   /* Elemental comm map ID */
                             void_int    *elem_ids, /* Vector of element IDs */
                             void_int    *side_ids, /* Vector of side IDs */
diff --git a/packages/seacas/libraries/nemesis/nemesis_cfg.h.in b/packages/seacas/libraries/nemesis/nemesis_cfg.h.in
index b3a53a7647..517fb96975 100755
--- a/packages/seacas/libraries/nemesis/nemesis_cfg.h.in
+++ b/packages/seacas/libraries/nemesis/nemesis_cfg.h.in
@@ -1,8 +1,8 @@
-# Copyright(C) 1999-2020, 2022 National Technology & Engineering Solutions
-# of Sandia, LLC (NTESS).  Under the terms of Contract DE-NA0003525 with
-# NTESS, the U.S. Government retains certain rights in this software.
-#
-# See packages/seacas/LICENSE for details
+// Copyright(C) 1999-2020 National Technology & Engineering Solutions
+// of Sandia, LLC (NTESS).  Under the terms of Contract DE-NA0003525 with
+// NTESS, the U.S. Government retains certain rights in this software.
+//
+// See packages/seacas/LICENSE for details
 #pragma once
 
 #define NEMESIS_VERSION_MAJOR @NEMESIS_VERSION_MAJOR@
diff --git a/packages/seacas/libraries/suplib_c/CMakeLists.txt b/packages/seacas/libraries/suplib_c/CMakeLists.txt
index 52f7c57f63..0e1b3965c3 100644
--- a/packages/seacas/libraries/suplib_c/CMakeLists.txt
+++ b/packages/seacas/libraries/suplib_c/CMakeLists.txt
@@ -30,4 +30,7 @@ TRIBITS_ADD_LIBRARY(
   SOURCES ${SOURCES}
   )
 
+if(BUILD_SHARED_LIBS)
+    set_target_properties(suplib_c PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS ON)
+endif()
 TRIBITS_SUBPACKAGE_POSTPROCESS()
diff --git a/packages/seacas/libraries/suplib_cpp/CMakeLists.txt b/packages/seacas/libraries/suplib_cpp/CMakeLists.txt
index c9f1d5704c..ca5ef5be37 100644
--- a/packages/seacas/libraries/suplib_cpp/CMakeLists.txt
+++ b/packages/seacas/libraries/suplib_cpp/CMakeLists.txt
@@ -31,4 +31,7 @@ TRIBITS_ADD_LIBRARY(
   SOURCES ${SOURCES}
   )
 
+if(BUILD_SHARED_LIBS)
+    set_target_properties(suplib_cpp PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS ON)
+endif()
 TRIBITS_SUBPACKAGE_POSTPROCESS()
